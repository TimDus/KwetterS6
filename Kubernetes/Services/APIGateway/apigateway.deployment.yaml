apiVersion: v1
kind: Service
metadata:
  name: apigateway-service
  namespace: kwetter
  labels:
    app: apigateway
    service: apigateway-service
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/enable-cors: "true"
    nginx.ingress.kubernetes.io/cors-allow-origin: "kwetterfront.localhost"
    nginx.ingress.kubernetes.io/cors-allow-methods: "PUT, GET, POST, OPTIONS, DELETE"
    nginx.ingress.kubernetes.io/cors-allow-headers: "DNT,X-CustomHeader,X-LANG,Keep-Alive,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,X-Api-Key,X-Device-Id,Access-Control-Allow-Origin"
    nginx.ingress.kubernetes.io/cors-allow-credentials: "true"
spec:
  selector:
    app: apigateway-pod
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8100
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: apigateway
  namespace: kwetter
spec:
  replicas: 1
  minReadySeconds: 10
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 1
  selector:
    matchLabels:
      app: apigateway-pod
      version: latest
  template:
    metadata:
      labels:
        app: apigateway-pod
        version: latest
    spec:
      containers:
      - name: apigateway-container
        image: timdus/kwettergateway:latest
        ports:
        - containerPort: 8100
        resources:
          limits:   
            memory: 512Mi
            cpu: "1"